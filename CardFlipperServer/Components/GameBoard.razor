@if (this.Cards != null && this.Cards.Count > 0)
{
    int index = 0;
    <div class="game-container container">
        @for (int r = 0; r < this.Cards.MaxRowColumn; r++)
        {
            <div class="row">
                @for (int c = 0; c < this.Cards.MaxRowColumn; c++)
                {
                    if (index >= this.Cards.Count || c > this.Cards[index].ColumnIndex)
                        break;

                    <div class="@gridColCss">
                        <CardDisplay Card="this.Cards[index++]"
                                     AllowedToFlipUp="this.AllowedToFlipUp"
                                     OnFlippedUp="this.OnFlippedUp" />
                    </div>
                }
            </div>
        }
    </div>
}

@code {
    private int index = 0;
    private string gridColCss;

    [Parameter]
    public CardLayout Cards { get; set; }

    [Parameter]
    public Func<bool> AllowedToFlipUp { get; set; }

    [Parameter]
    public Func<CardData, Task> OnFlippedUp { get; set; }

    protected override void OnParametersSet()
    {
        gridColCss = $"col-{(12 / this.Cards.MaxRowColumn)}";
        base.OnParametersSet();
    }
}
